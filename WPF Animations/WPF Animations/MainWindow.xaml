<Window x:Class="WPF_Animations.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Animations"
        mc:Ignorable="d"
        Title="MainWindow" Height="480" Width="600"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="#2b2e2c"
        >

    <!-- 
    There are 2 main ways that we can apply animations in WPF:
    1. We can do it in the XAML ( we need to use StoryBoards in order to animate )
    in other words, the 'Animation' controls must be encapsulated within 'BeginStoryBoard'
    2. We can do it in the code-behind ( we have to use the animate classes )
    -->

    <!--
    XAML Animations:
    - Animations in XAML are applied using Storyboards, encapsulating animation controls within the BeginStoryboard element.
    - Triggers, including property triggers, event triggers, and data triggers, define conditions for triggering animations.
    - Triggers enable the definition of Enter Actions (when a condition is met) and Exit Actions (when the condition is no longer met).
    -->
    
    <!--
        The animations on the xaml-side can be only done by using 'triggers'.
        we have 3 types of triggers:
        • property trigger
        • event trigger
        • data trigger
        Triggers allows us to perform 2 types of actions:
        • Enter Actions (when the condition is met)
        • Exit Actions (when the condition is no longer met)
    -->
    <Window.Resources>


        <!-- Style used for the XAML buttons -->
        <Style x:Key="XamlButtonStyle" TargetType="Button">
            <!-- ... your XAML button style here ... -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="3" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="MediumAquamarine">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>

                             <!-- this is a property trigger -->
                            <Trigger Property="IsMouseOver" Value="true">

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="130"  Storyboard.TargetProperty="Width" Duration="0:0:0.3" />
                                            <DoubleAnimation To="150"  Storyboard.TargetProperty="Height" Duration="0:0:0.3" />
                                            <ColorAnimation To="MediumSlateBlue" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="100"  Storyboard.TargetProperty="Width" Duration="0:0:0.3" />
                                            <DoubleAnimation To="120"  Storyboard.TargetProperty="Height" Duration="0:0:0.3" />
                                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!-- Style used for the code-behid buttons -->
        <Style  x:Key="CodeBehindButtonStyle" TargetType="Button">
            <!-- ... your code-behind button style here ... -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="3" CornerRadius="6" BorderBrush="MediumAquamarine" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" VerticalAlignment="Center">
            <Label 
                       FontWeight="Bold"
                        FontFamily="Verdana"
                       FontSize="14"
                       Foreground="White"
                       DockPanel.Dock="Left"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                       >WPF Animations</Label>
            <Button
                        x:Name="btnClose"
                        FontWeight="Bold"
                        FontSize="12"
                        Foreground="White"
                        DockPanel.Dock="Right"
                        Width="30"
                        Content="X"
                        Background="Transparent"
                        HorizontalAlignment="Right"
                        />
        </DockPanel>
        
        <!-- Animations performed from the XAML -->
        <StackPanel Grid.Row="1" Orientation="Vertical">
            <Label VerticalAlignment="Center"
                   HorizontalAlignment="Center" 
                    HorizontalContentAlignment="Center"
                    FontSize="20"
                    FontWeight="Bold"
                    Content="Animations from XAML"
                    Background="Transparent"
                    Foreground="White"
                />
            <StackPanel x:Name="btnSet1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Button Style="{StaticResource XamlButtonStyle}" Content="V" Margin="3" Height="120" Width="100" Background="Transparent" FontWeight="Bold" Foreground="MediumAquamarine"/>
                <Button Style="{StaticResource XamlButtonStyle}" Content="L" Margin="3" Height="120" Width="100" Background="Transparent" FontWeight="Bold" Foreground="MediumAquamarine"/>
                <Button Style="{StaticResource XamlButtonStyle}" Content="A" Margin="3" Height="120" Width="100" Background="Transparent" FontWeight="Bold" Foreground="MediumAquamarine"/>
                <Button Style="{StaticResource XamlButtonStyle}" Content="D" Margin="3" Height="120" Width="100" Background="Transparent" FontWeight="Bold" Foreground="MediumAquamarine"/>
                <Button Style="{StaticResource XamlButtonStyle}" Content="O" Margin="3" Height="120" Width="100" Background="Transparent" FontWeight="Bold" Foreground="MediumAquamarine"/>
            </StackPanel>

        </StackPanel>

        <StackPanel Grid.Row="2" Orientation="Vertical">
            <!-- Animations performed from the Code-behind -->
            <Label VerticalAlignment="Center"
                   HorizontalAlignment="Center" 
                   HorizontalContentAlignment="Center"
                   FontSize="20"
                   FontWeight="Bold"
                   Content="Animations from Code-behind"
                     Background="Transparent"
                    Foreground="White"
                   />
            <Grid Background="Transparent">
                <StackPanel x:Name="btnSet2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Button Style="{StaticResource CodeBehindButtonStyle}" Height="120" Background="Transparent" Width="100" Margin="3" FontSize="18" FontWeight="Bold" Content="V" Foreground="MediumAquamarine"/>
                    <Button Style="{StaticResource CodeBehindButtonStyle}" Height="120" Background="Transparent" Width="100" Margin="3" FontSize="18" FontWeight="Bold" Content="L" Foreground="MediumAquamarine"/>
                    <Button Style="{StaticResource CodeBehindButtonStyle}" Height="120" Background="Transparent" Width="100" Margin="3" FontSize="18" FontWeight="Bold" Content="A" Foreground="MediumAquamarine"/>
                    <Button Style="{StaticResource CodeBehindButtonStyle}" Height="120" Background="Transparent" Width="100" Margin="3" FontSize="18" FontWeight="Bold" Content="D" Foreground="MediumAquamarine"/>
                    <Button Style="{StaticResource CodeBehindButtonStyle}"  Height="120" Background="Transparent" Width="100" Margin="3" FontSize="18" FontWeight="Bold" Content="O" Foreground="MediumAquamarine"/>
                </StackPanel>
            </Grid>
        </StackPanel>
        <Label x:Name="lblAuthor" Grid.Row="3"
            VerticalAlignment="Center"
            HorizontalAlignment="Center" 
            HorizontalContentAlignment="Center"
            FontWeight="Bold"
            Content="author"
            Background="Transparent"
            Foreground="White"
            /> 
    </Grid>
</Window>
